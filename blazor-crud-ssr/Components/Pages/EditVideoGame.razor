@page "/edit-game"
@page "/edit-game/{Id:int}"
@inject DataContext dataContext

@if (Id is null)
{
    <PageTitle>Add a New Video Game</PageTitle>
    <h3>Add a New Video Game</h3>
}
else
{
    <PageTitle>Edit "@currentGame.Title"</PageTitle>
    <h3>Edit "@currentGame.Title"</h3>
}

<EditForm Enhance Model="currentGame" OnSubmit="HandleSubmit" FormName="GameForm">
    <div>
        <label for="title">Title</label>
        <InputText id="title" @bind-Value="currentGame.Title" class="form-control" ></InputText>
    </div>
    <div>
        <label for="publisher">Publisher</label>
        <InputText id="publisher" @bind-Value="currentGame.Publisher" class="form-control" ></InputText>
    </div>
    <div>
        <label for="release">ReleaseDate</label>
        <InputNumber id="release" @bind-Value="currentGame.ReleaseDate" class="form-control"></InputNumber>
    </div>
    <button type="submit" class="btn btn-primary">Save Video Game</button>
</EditForm>

<p>@status</p>

@code {
    [Parameter]
    public int? Id { get; set; } = null;

    [SupplyParameterFromForm]
    public VideoGame currentGame { get; set; } = new();

    private string status = string.Empty;

    protected override async Task OnParametersSetAsync()
    {
        if (Id is not null)
        {
            var game = await dataContext.VideoGames.FindAsync(Id);
            if (game is not null)
            {
                currentGame.Title ??= game.Title;
                currentGame.Publisher ??= game.Publisher;
                currentGame.ReleaseDate ??= game.ReleaseDate;            }
        }
        else
        {

        }
    }

    public async Task HandleSubmit()
    {
        if (Id is not null)
        {
            await UpdateVideoGame();
        }
        else
        {
            await CreateVideoGame();
        }
    }

    async Task UpdateVideoGame()
    {
        var dbGame = await dataContext.VideoGames.FindAsync(Id);
        if (dbGame is not null)
        {
            dbGame.Title = currentGame.Title;
            dbGame.Publisher = currentGame.Publisher;
            dbGame.ReleaseDate = currentGame.ReleaseDate;

            var result = await dataContext.SaveChangesAsync();

            if (result == 1)
            {
                status = "Game updated successfully!";
            }
            else
            {
                status = "Something went wrong...";            }
        }
    }

    public async Task CreateVideoGame()
    {
        dataContext.VideoGames.Add(currentGame);
        var result = await dataContext.SaveChangesAsync();

        if (result == 1)
        {
            status = "Game added successfully";
        }
        else
        {
            status = "Something was wrong..";    
        }
    }
}
