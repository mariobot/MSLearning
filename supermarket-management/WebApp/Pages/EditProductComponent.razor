@page "/editproduct/{ProductId}"
@attribute [Authorize(Policy = "AdminOnly")]

@inject NavigationManager NavigationManager
@inject IGetProductByIdUseCase GetProductByIdUseCase
@inject IEditProductUseCase EditProductUseCase
@inject IViewCategoriesUseCase ViewCategoriesUseCase

<h3>Editar Producto</h3>

@if (product != null)
{
    <EditForm Model="product" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="name">Categoria</label>
            <select @bind="product.CategoryId" class="form-control">
                <option selected></option>
                @foreach (var category in listCategories)
                {
                    <option value="@category.CategoryId">@category.Name</option>
                }
            </select>
        </div>

        <div class="form-group">
            <label for="name">Nombre</label>
            <InputText id="name" @bind-Value="product.Name" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="price">Precio</label>
            <InputNumber id="price" @bind-Value="product.Price" @bind-Value:format="C0" class="form-control"></InputNumber>
        </div>

        <div class="form-group">
            <label for="quantity">Cantidad</label>
            <InputNumber id="quantity" @bind-Value="product.Quantity" @bind-Value:format="C0" class="form-control"></InputNumber>
        </div>

        <button type="submit" class="btn btn-primary">Actualizar</button>
        <button type="button" class="btn btn-primary" @onclick="OnCancel">Cancel</button>
    </EditForm>
}

@code {
    [Parameter]
    public string ProductId { get; set; }

    private Product product;
    private IEnumerable<Category> listCategories;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        product = new Product();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        if (int.TryParse(ProductId, out int iProductId))
        {
            product = GetProductByIdUseCase.Execute(iProductId);
            listCategories = ViewCategoriesUseCase.Execute();
        }
    }

    private void OnValidSubmit()
    {
        EditProductUseCase.Execute(product);
        NavigationManager.NavigateTo("/products");
    }

    private void OnCancel()
    {
        NavigationManager.NavigateTo("/products");
    }
}
