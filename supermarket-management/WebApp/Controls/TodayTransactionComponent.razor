@inject IGetTodayTransactionsUseCase GetTodayTransactionsUseCase

@if (transactions != null)
{
    <h4>Transacciones del dia de hoy.</h4>
    <table class="table">
        <thead>
            <tr>
                <th>Nombre Cajero</th>
                <th>Nombre Producto</th>
                <th>Fecha</th>
                <th>Cantidad Antes</th>
                <th>Cantidad Vendida</th>
                <th>Cantidad Existentes</th>
                <th>Venta Total</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var tran in transactions)
            {
                <tr>
                    <td>@tran.CashierName</td>
                    <td>@tran.ProductName</td>
                    <td>@tran.TimeStamp.ToShortDateString()</td>
                    <td>@tran.BeforeQty</td>
                    <td>@tran.SoldQty</td>
                    <td>@(tran.BeforeQty - tran.SoldQty)</td>
                    <td>@(string.Format("{0:C0}", tran.SoldQty * tran.Price))</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    private IEnumerable<Transaction> transactions;

    public void LoadTransactions(string cashierName)
    {
        transactions = GetTodayTransactionsUseCase.Execute(cashierName);
        StateHasChanged();
    }
}
